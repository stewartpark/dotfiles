;; -*-lisp-*-
(in-package :stumpwm)

(set-prefix-key (kbd "C-i"))
(setf *mouse-focus-policy* :click)

(mode-line)

(defcommand send-key (key &optional (win (current-window))) (:key)
  "Send key press and key release events for KEY to window WIN."
  (let ((xwin (window-xwin win)))
    (multiple-value-bind (code state) (key-to-keycode+state key)
      (flet ((send (event)
               (xlib:send-event xwin event (xlib:make-event-mask event)
                                :display *display*
                                :root (screen-root (window-screen win))
                                :x 0 :y 0 :root-x 0 :root-y 0
                                :window xwin :event-window xwin
                                :code code
                                :state state)))
        (send :key-press)
        (send :key-release)
        (xlib:display-finish-output *display*)))))

;; Application shortcuts
(define-key *root-map* (kbd "e") "exec emacsclient -n -c")
(define-key *root-map* (kbd "W") "exec google-chrome")

;; Vim-style arrow keys
(define-key *top-map* (kbd "C-h") "send-key Left")
(define-key *top-map* (kbd "C-H") "send-key S-Left")
(define-key *top-map* (kbd "C-j") "send-key Down")
(define-key *top-map* (kbd "C-J") "send-key S-Down")
(define-key *top-map* (kbd "C-k") "send-key Up")
(define-key *top-map* (kbd "C-K") "send-key S-Up")
(define-key *top-map* (kbd "C-l") "send-key Right")
(define-key *top-map* (kbd "C-L") "send-key S-Right")
